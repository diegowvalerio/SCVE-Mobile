package net.ddns.scvemarchezanmetais.scvemobile.dadosws;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.view.View;
import android.widget.ProgressBar;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOListaPreco;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOListaPrecoItem;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOProduto;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOTipoMv;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOTipoMvVend;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.ListaPreco;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.ListaPrecoItem;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Produto;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoMv;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoMvVend;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.SQLException;
import java.util.List;

public class WsTipoMv extends AsyncTask<String,Integer,String> {
    Activity activity;
    ProgressBar progressBar;
    ProgressDialog load;

    private DatabaseHelper dh;
    private DAOTipoMv daoTipoMv;
    private TipoMv tipoMv = new TipoMv();

    private DAOTipoMvVend daoTipoMvVend;
    private TipoMvVend tipoMvVend = new TipoMvVend();

    private DAOListaPreco daoListaPreco;
    private ListaPreco listaPreco = new ListaPreco();

    private DAOListaPrecoItem daoListaPrecoItem;
    private ListaPrecoItem listaPrecoItemo = new ListaPrecoItem();

    private DAOProduto daoProduto;
    private Produto produto = new Produto();

    public WsTipoMv(Activity activity){
        this.activity = activity;
    }

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        progressBar = (ProgressBar) activity.findViewById(R.id.progressBar);
        progressBar.setVisibility(View.VISIBLE);
        load = ProgressDialog.show(activity, "Por favor Aguarde ...",
                "Baixando Tipo de Pedido ...");
    }

    @Override
    protected void onPostExecute(String s) {
        super.onPostExecute(s);
        Gson gson = new Gson();

        List<TipoMvVend> tipoMvVends = gson.fromJson(s, new TypeToken<List<TipoMvVend>>(){}.getType());
        dh = new DatabaseHelper(activity);
        try {
            daoTipoMvVend = new DAOTipoMvVend(dh.getConnectionSource());
        } catch (SQLException e) {
            e.printStackTrace();
        }

        try {
            for (TipoMvVend tip : tipoMvVends) {
                daoTipoMvVend.create(tip);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        progressBar.setVisibility(View.INVISIBLE);
        load.dismiss();

        dh.close();
    }
    @Override
    protected void onProgressUpdate(Integer... values) {
        super.onProgressUpdate(values);
        progressBar.setProgress(values[0]);
    }

    @Override
    protected String doInBackground(String... strings) {
        String jsonRetorno=null;
        try {
            URL url = new URL(strings[0]);
            InputStream stream = url.openStream();
            BufferedReader bufferedReader =
                    new BufferedReader(new InputStreamReader(stream));
            StringBuilder builder = new StringBuilder();
            onProgressUpdate(10);
            String linha;
            while ((linha = bufferedReader.readLine())!=null){
                builder.append(linha);
            }
            jsonRetorno = builder.toString();
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return jsonRetorno;
    }
}


