package net.ddns.scvemarchezanmetais.scvemobile.activitys;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Toast;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.adapters.MaskEditUtil;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOCidade;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOEndereco;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOPessoa;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOTipoEndereco;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Endereco;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoEndereco;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class Novo_Cliente_Endereco extends AppCompatActivity {
    private AlertDialog alertaEndereco;
    DatabaseHelper dh;
    DAOPessoa daoPessoa;
    DAOEndereco daoEndereco;
    DAOTipoEndereco daoTipoEndereco;
    DAOCidade daoCidade;
    List<TipoEndereco> tipoEnderecoList = new ArrayList<>();
    Endereco endereco = new Endereco();

    ArrayList<String> itens = new ArrayList<String>();

    EditText tipo,logradouro,bairro,numero,cidadeuf,cep,complemento;
    int o = 0;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_novo__cliente__endereco);

        tipo =findViewById(R.id.contato);
        tipo.setFocusable(false);
        logradouro =findViewById(R.id.logradouro);
        bairro =findViewById(R.id.bairro);
        numero =findViewById(R.id.numero);
        cidadeuf=findViewById(R.id.cidadeuf);
        cidadeuf.setFocusable(false);
        cep =findViewById(R.id.cep);
        cep.addTextChangedListener(MaskEditUtil.mask(cep, MaskEditUtil.FORMAT_CEP));
        complemento =findViewById(R.id.complemento);

        /**/

        try {
            dh = new DatabaseHelper(Novo_Cliente_Endereco.this);
            daoTipoEndereco = new DAOTipoEndereco(dh.getConnectionSource());
            daoEndereco = new DAOEndereco(dh.getConnectionSource());
            daoPessoa = new DAOPessoa(dh.getConnectionSource());
            daoCidade = new DAOCidade(dh.getConnectionSource());
            tipoEnderecoList.addAll(daoTipoEndereco.queryForAll());
            for (TipoEndereco t:tipoEnderecoList){
                itens.add(t.getNome().toString());
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void tipoendereco(View view){
        //adapter utilizando um layout customizado (TextView)
        final ArrayAdapter adapter = new ArrayAdapter(this, R.layout.novo_cliente_endereco_tipoendereco, itens);

        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Selecione o Tipo do Endereço:");
        //define o diálogo como uma lista, passa o adapter.
        builder.setSingleChoiceItems(adapter, 0, new DialogInterface.OnClickListener() {
            public void onClick(DialogInterface arg0, int arg1) {
                //Toast.makeText(Novo_Cliente_Endereco.this, "posição selecionada=" + arg1, Toast.LENGTH_SHORT).show();
                tipo.setText(adapter.getItem(arg1).toString());
                try {
                    endereco.setTipoendereco(daoTipoEndereco.queryBuilder().where().eq("nome",tipo.getText().toString()).queryForFirst());
                } catch (SQLException e) {
                    e.printStackTrace();
                }
                //tipo.setEnabled(false);
                alertaEndereco.dismiss();
            }
        });

        alertaEndereco = builder.create();
        alertaEndereco.show();
    }

    private void preencher() {
        if(endereco.getCep()==null) {
            Bundle bundle = getIntent().getExtras();
            if (bundle != null && bundle.containsKey("idenderecomobile")) {
                try {
                    endereco = daoEndereco.queryForId(bundle.getInt("idenderecomobile"));
                    tipo.setText(endereco.getTipoendereco().getNome());
                    logradouro.setText(endereco.getLogadouro());
                    bairro.setText(endereco.getBairro());
                    numero.setText(endereco.getNumero());
                    cidadeuf.setText(endereco.getCidade().getNome().toString() + "/" + endereco.getCidade().getEstado().getSigla().toString());
                    cep.setText(endereco.getCep());
                    cep.addTextChangedListener(MaskEditUtil.mask(cep, MaskEditUtil.FORMAT_CEP));
                    complemento.setText(endereco.getComplemento());
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void cidadeuf(View view){
        Intent intent = new Intent(this,Novo_Cliente_Endereco_Cidades.class);
        startActivity(intent);
        o = 1;
    }

    @Override
    protected void onStart() {
        super.onStart();
        buscacidade();
        preencher();
    }
    public void buscacidade() {
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = lt.edit();
        String idcidade = lt.getString("idcidade", "vazio");

        if(o == 1){
            if(!idcidade.equals("vazio")){
                try {
                    endereco.setCidade(daoCidade.queryForId(Integer.parseInt(idcidade)));
                    cidadeuf.setText(endereco.getCidade().getNome().toString()+"/"+endereco.getCidade().getEstado().getSigla().toString());
                    //cidadeuf.setEnabled(false);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
                o=0;
            }else{
                Toast.makeText(this, "Cidade Informada inválida", Toast.LENGTH_SHORT).show();
            }
        }
    }

    public void salvar(View view){
        try {
            Bundle bundle = getIntent().getExtras();
            if (bundle!=null && bundle.containsKey("idpessoa")) {
                endereco.setPessoa(daoPessoa.queryForId(bundle.getInt("idpessoa")));
                endereco.setLogadouro(logradouro.getText().toString());
                endereco.setBairro(bairro.getText().toString());
                endereco.setNumero(numero.getText().toString());
                endereco.setCep(cep.getText().toString());
                endereco.setComplemento(complemento.getText().toString());
                daoEndereco.createOrUpdate(endereco);
                Toast.makeText(this, "Endereço Salvo com Sucesso", Toast.LENGTH_SHORT).show();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        finish();
        //dh.close();
    }
    public void cancelar(View view){
        finish();
        //dh.close();
    }

}
