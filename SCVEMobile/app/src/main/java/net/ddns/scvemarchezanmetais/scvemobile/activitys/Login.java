package net.ddns.scvemarchezanmetais.scvemobile.activitys;

import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.Toast;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOVendedor;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Vendedor;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Login extends AppCompatActivity {

    private DatabaseHelper dh;
    private DAOVendedor vendedorOrm;
    private Vendedor vendedor = new Vendedor();

    EditText login,senha;
    SharedPreferences lt;
    SharedPreferences.Editor editor;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        editor = lt.edit();
        String t = lt.getString("login","");
        String t2 = lt.getString("senha","");

         login = (EditText) findViewById(R.id.ed_login);
         senha = (EditText) findViewById(R.id.ed_senha);

         login.setText(t);
         senha.setText(t2);

        Switch switch1 = (Switch) findViewById(R.id.switch1);
        switch1.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if(isChecked){
                    editor.putString("login",login.getText().toString());
                    editor.putString("senha",senha.getText().toString());
                    editor.commit();
                }else{
                    editor.putString("login","");
                    editor.putString("senha","");
                    editor.commit();
                }
            }
        });

        if(!t.toString().equals("") && !t2.toString().equals("")){
            switch1.setChecked(true);
        }else{
            switch1.setChecked(false);
        }
    }

    public void config(View view){
        Intent intent = new Intent(this,Config.class);
        //EditText login = (EditText) findViewById(R.id.ed_login);

        intent.putExtra("idpessoa",login.getText().toString());

        startActivity(intent);
    }

    public void login(View view) throws SQLException {

        dh = new DatabaseHelper(Login.this);
        try {
            vendedorOrm = new DAOVendedor(dh.getConnectionSource());
        } catch (SQLException e) {
            e.printStackTrace();
        }

        EditText loginT = (EditText) findViewById(R.id.ed_login);
        EditText senhaT = (EditText) findViewById(R.id.ed_senha);
        Integer login = Integer.parseInt(loginT.getText().toString());
        String senha = senhaT.getText().toString();
        Map<String, Object> filtro = new HashMap<String, Object>();
        filtro.put("idpessoa",login);
        filtro.put("cpf_cnpj",senha);
        List<Vendedor> vlist;
        vlist = vendedorOrm.queryForFieldValues(filtro);
        if (vlist.isEmpty()){
            Toast.makeText(this, "Login Inv√°lido", Toast.LENGTH_SHORT).show();
        }else{
            Intent intent = new Intent(this,Principal.class);
            intent.putExtra("idpessoa",loginT.getText().toString());

            startActivity(intent);
            }
        dh.close();
    }
}
