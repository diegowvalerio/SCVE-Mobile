package net.ddns.scvemarchezanmetais.scvemobile.activitys;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.adapters.ADP_Produtos_Tabelas;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOProduto;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOTipoMvVend;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Produto;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoMvVend;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class Formulario_Produto extends AppCompatActivity {

    EditText codigo,descricao,abreviada,ean;
    Produto produto = new Produto();
    DatabaseHelper dh;
    DAOProduto daoProduto;

    DAOTipoMvVend daoTipoMvVend;
    List<TipoMvVend> tipoMvVendList = new ArrayList<>();
    ListView listViewTabela;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_formulario__produto);

        codigo = findViewById(R.id.pcod);
        descricao = findViewById(R.id.pdesc);
        abreviada = findViewById(R.id.pdesca);
        ean = findViewById(R.id.pean);


        Bundle bundle = getIntent().getExtras();
        if (bundle!=null && bundle.containsKey("idproduto")) {
            dh = new DatabaseHelper(Formulario_Produto.this);
            try {
                daoProduto = new DAOProduto(dh.getConnectionSource());

            } catch (SQLException e) {
                e.printStackTrace();
            }

            try {
                produto = daoProduto.queryForId(bundle.getInt("idproduto"));

                codigo.setText(produto.getIdproduto().toString());
                descricao.setText(produto.getDescricao());
                abreviada.setText(produto.getDescabreviada());
                ean.setText(produto.getEan());

                codigo.setEnabled(false);
                descricao.setEnabled(false);
                abreviada.setEnabled(false);
                ean.setEnabled(false);

                listViewTabela = (ListView) findViewById(R.id.listviewTabelasPreco);

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

    }

    private void preencherTabelas() {
        dh = new DatabaseHelper(Formulario_Produto.this);
        try {
            daoTipoMvVend = new DAOTipoMvVend(dh.getConnectionSource());
        }catch (SQLException e){
            e.printStackTrace();
        }

        try {
                tipoMvVendList.addAll(daoTipoMvVend.queryForAll()) ;
            } catch (SQLException e) {
                e.printStackTrace();
        }

        ADP_Produtos_Tabelas adp_produtos_tabelas = new ADP_Produtos_Tabelas(Formulario_Produto.this,tipoMvVendList,produto.getIdproduto().toString());
        listViewTabela.setAdapter(adp_produtos_tabelas);
        setListViewHeightBasedOnItems(listViewTabela);

    }

    @Override
    protected void onStart() {
        super.onStart();
        preencherTabelas();
    }
    /*teste*/
    public static boolean setListViewHeightBasedOnItems(ListView listView) {

        ListAdapter listAdapter = listView.getAdapter();
        if (listAdapter != null) {

            int numberOfItems = listAdapter.getCount();

            // Get total height of all items.
            int totalItemsHeight = 0;
            for (int itemPos = 0; itemPos < numberOfItems; itemPos++) {

                float px = 300 * (listView.getResources().getDisplayMetrics().density);

                View item = listAdapter.getView(itemPos, null, listView);
                item.measure(View.MeasureSpec.makeMeasureSpec((int)px, View.MeasureSpec.AT_MOST), View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.UNSPECIFIED));
                totalItemsHeight += item.getMeasuredHeight();
            }

            // Get total height of all item dividers.
            int totalDividersHeight = listView.getDividerHeight() * (numberOfItems - 1);
            // Get padding
            int totalPadding = listView.getPaddingTop() + listView.getPaddingBottom();

            // Set list height.
            ViewGroup.LayoutParams params = listView.getLayoutParams();
            params.height = totalItemsHeight + totalDividersHeight + totalPadding;
            listView.setLayoutParams(params);
            listView.requestLayout();

            return true;

        } else {
            return false;
        }

    }
}
