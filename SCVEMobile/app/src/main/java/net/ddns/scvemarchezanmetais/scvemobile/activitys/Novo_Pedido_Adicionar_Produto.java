package net.ddns.scvemarchezanmetais.scvemobile.activitys;

import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.gson.Gson;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOFormaPag;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOItem;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOMovimento;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOProduto;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Item;

import java.sql.SQLException;

public class Novo_Pedido_Adicionar_Produto extends AppCompatActivity {
    EditText produto,qtde,valor,desconto,totalitem,observacaoitem;

    Item item = new Item();

    DAOProduto daoProduto;
    DAOMovimento daoMovimento;
    DAOItem daoItem;

    DatabaseHelper dh;

    int V =0;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_novo__pedido__adicionar__produto);

        dh = new DatabaseHelper(this);
        try {
            daoProduto = new DAOProduto(dh.getConnectionSource());
            daoMovimento = new DAOMovimento(dh.getConnectionSource());
            daoItem = new DAOItem(dh.getConnectionSource());
        }catch (SQLException e){
            e.printStackTrace();
        }

        produto = findViewById(R.id.adproduto);
        //produto.setFocusable(false);
        qtde = findViewById(R.id.adqtde);
        valor = findViewById(R.id.advalor);
        desconto = findViewById(R.id.addesconto);
        totalitem = findViewById(R.id.adtotal);
        observacaoitem = findViewById(R.id.adobservacao);


    }
    @Override
    protected void onStart() {
        super.onStart();
        buscaproduto();
    }

    private void buscaproduto() {
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = lt.edit();
        String t = lt.getString("idproduto","vazio");

        if(V==1) {
            if (!t.equals("vazio")) {
                try {
                    item.setProduto(daoProduto.queryForId(Integer.parseInt(t)));
                    produto.setText(item.getProduto().getDescricao().toString());
                    produto.setFocusable(false);
                    V=0;
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else {
                Toast.makeText(this, "Produto Informado inv√°lido", Toast.LENGTH_SHORT).show();
            }
        }
    }

    public void listaprodutos(View view){
        Intent intent = new Intent(this,Novo_Pedido_Produto.class);
        startActivity(intent);
        V =1;
    }

    public void salvarproduto(View view) {
        if (!desconto.getText().toString().equals("") && !qtde.getText().toString().equals("") && !valor.getText().toString().equals("") && !totalitem.getText().toString().equals("")){
            try {
                Bundle bundle = getIntent().getExtras();
                if (bundle != null && bundle.containsKey("idmovimento")) {
                    item.setDesconto(Double.parseDouble(desconto.getText().toString()));
                    item.setQtde(Integer.parseInt(qtde.getText().toString()));
                    item.setValor(Double.parseDouble(valor.getText().toString()));
                    item.setSubtotal(Double.parseDouble(totalitem.getText().toString()));
                    item.setItemobservacao(observacaoitem.getText().toString());
                    item.setMovimento(daoMovimento.queryForId(bundle.getInt("idmovimento")));
                    daoItem.createOrUpdate(item);
                    Toast.makeText(this, "Item Salvo com Sucesso", Toast.LENGTH_SHORT).show();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        finish();
    }else{
            Toast.makeText(this, "Preencha todos os campos !", Toast.LENGTH_SHORT).show();
        }
    }

    public void cancelarProduto(View view){
        finish();
    }
}
