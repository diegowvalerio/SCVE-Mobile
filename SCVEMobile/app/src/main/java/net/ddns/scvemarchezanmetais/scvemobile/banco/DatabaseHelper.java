package net.ddns.scvemarchezanmetais.scvemobile.banco;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.os.Build;
import android.support.annotation.RequiresApi;

import com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;
import com.j256.ormlite.support.ConnectionSource;
import com.j256.ormlite.table.TableUtils;

import net.ddns.scvemarchezanmetais.scvemobile.entidades.Cidade;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.CondPagto;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Contato;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Endereco;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Estado;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.FormaPag;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Item;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.ListaPreco;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.ListaPrecoItem;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Movimento;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Pessoa;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Pfisica;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Pjuridica;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Produto;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoEndereco;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoMv;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoMvVend;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Vendedor;

import java.sql.SQLException;

public class DatabaseHelper extends OrmLiteSqliteOpenHelper {
    private static final String databaseName = "BD.db";
    private static final Integer databaseVersion = 2;

    public DatabaseHelper(Context context) {
        super(context, databaseName, null, databaseVersion);
    }


    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN)
    @Override
    public void onCreate(SQLiteDatabase database, ConnectionSource connectionSource) {
        try {
            database.execSQL("PRAGMA foreign_keys = ON");
            database.setForeignKeyConstraintsEnabled(true);

            //cria as tabelas
            TableUtils.createTable(connectionSource, Vendedor.class);
            TableUtils.createTable(connectionSource, Estado.class);
            TableUtils.createTable(connectionSource, Cidade.class);

            TableUtils.createTable(connectionSource, Pessoa.class);
            TableUtils.createTable(connectionSource, TipoEndereco.class);
            TableUtils.createTable(connectionSource, Contato.class);
            TableUtils.createTable(connectionSource, Endereco.class);
            TableUtils.createTable(connectionSource, Pfisica.class);
            TableUtils.createTable(connectionSource, Pjuridica.class);

            TableUtils.createTable(connectionSource, Produto.class);
            TableUtils.createTable(connectionSource, ListaPrecoItem.class);
            TableUtils.createTable(connectionSource, ListaPreco.class);

            TableUtils.createTable(connectionSource, TipoMvVend.class);
            TableUtils.createTable(connectionSource, TipoMv.class);

            TableUtils.createTable(connectionSource, FormaPag.class);
            TableUtils.createTable(connectionSource, CondPagto.class);

            TableUtils.createTable(connectionSource, Movimento.class);
            TableUtils.createTable(connectionSource, Item.class);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void onUpgrade(SQLiteDatabase database, ConnectionSource connectionSource, int oldVersion, int newVersion) {
        try {
            //excluir tabelas e gerar novamente
            TableUtils.dropTable(connectionSource, Vendedor.class,true);
            TableUtils.dropTable(connectionSource, Estado.class,true);
            TableUtils.dropTable(connectionSource, Cidade.class,true);

            TableUtils.dropTable(connectionSource, TipoEndereco.class,true);
            TableUtils.dropTable(connectionSource, Contato.class,true);
            TableUtils.dropTable(connectionSource, Endereco.class,true);
            TableUtils.dropTable(connectionSource, Pfisica.class,true);
            TableUtils.dropTable(connectionSource, Pjuridica.class,true);
            TableUtils.dropTable(connectionSource, Pessoa.class,true);

            TableUtils.dropTable(connectionSource, Produto.class,true);
            TableUtils.dropTable(connectionSource, ListaPrecoItem.class,true);
            TableUtils.dropTable(connectionSource, ListaPreco.class,true);

            TableUtils.dropTable(connectionSource, TipoMvVend.class,true);
            TableUtils.dropTable(connectionSource, TipoMv.class,true);

            TableUtils.dropTable(connectionSource, FormaPag.class,true);
            TableUtils.dropTable(connectionSource, CondPagto.class,true);


            TableUtils.dropTable(connectionSource, Item.class,true);
            TableUtils.dropTable(connectionSource, Movimento.class,true);


            onCreate(database, connectionSource);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void close(){
        super.close();
    }
}
