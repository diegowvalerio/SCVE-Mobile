package net.ddns.scvemarchezanmetais.scvemobile.activitys;

import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOCondPagto;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOFormaPag;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOItem;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOMovimento;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOPessoa;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOTipoMv;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Item;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Movimento;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class Novo_Pedido extends AppCompatActivity {
    EditText dtvenda,observacao,totalvenda,cliente,tipoMv,condPagto,formaPag;
    String formato = "dd/MM/yyyy";

    DatabaseHelper dh;

    Movimento movimento = new Movimento();
    DAOMovimento daoMovimento;
    DAOItem daoItem;

    DAOTipoMv daoTipoMv;
    DAOCondPagto daoCondPagto;
    DAOFormaPag daoFormaPag;
    DAOPessoa daoPessoa;

    List<Item> items = new ArrayList<>();

    ListView listViewProdutos;

    int V =0;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_novo__pedido);

        dh = new DatabaseHelper(this);
        try {
            daoMovimento = new DAOMovimento(dh.getConnectionSource());
            daoItem = new DAOItem(dh.getConnectionSource());
            daoTipoMv = new DAOTipoMv(dh.getConnectionSource());
            daoCondPagto = new DAOCondPagto(dh.getConnectionSource());
            daoFormaPag = new DAOFormaPag(dh.getConnectionSource());
            daoPessoa = new DAOPessoa(dh.getConnectionSource());
        }catch (SQLException e){
            e.printStackTrace();
        }

        tipoMv = findViewById(R.id.ptitpomv);
        tipoMv.setFocusable(false);
        condPagto = findViewById(R.id.pprazo);
        condPagto.setFocusable(false);
        formaPag = findViewById(R.id.pformapagto);
        formaPag.setFocusable(false);
        cliente = findViewById(R.id.pcliente);
        cliente.setFocusable(false);
        /*
        dtvenda = findViewById(R.id.dtvenda);
        observacao = findViewById(R.id.obersavao);
        totalvenda = findViewById(R.id.totalvenda);
        */
        listViewProdutos = (ListView) findViewById(R.id.listviewProdutos);

    }

    public void tipopedido(View view){
        Intent intent = new Intent(this,Novo_Pedido_TipodePedido.class);
        startActivity(intent);
        V = 1;
    }

    public void condpagto(View view){
        Intent intent = new Intent(this,Novo_Pedido_CondPagto.class);
        startActivity(intent);
        V = 2;
    }

    public void formaPag(View view){
        Intent intent = new Intent(this,Novo_Pedido_FormaPag.class);
        startActivity(intent);
        V = 3;
    }
    //pclientes
    public void pclientes(View view){
        Intent intent = new Intent(this,Novo_Pedido_Cliente.class);
        startActivity(intent);
        V = 4;
    }

    public void adicionarProduto(View view){
       if(movimento.getTipoMv() != null) {
           Intent intent = new Intent(this, Novo_Pedido_Adicionar_Produto.class);
           startActivity(intent);
           V = 5;
       }else{
           Toast.makeText(this, "Informe o Tipo de Pedido !", Toast.LENGTH_SHORT).show();
       }
    }

    @Override
    protected void onStart() {
        super.onStart();
        buscatipopedido();
        buscaCondpagto();
        buscaFormaPag();
        buscaCliente();
    }

    private void buscatipopedido() {
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = lt.edit();
        String t = lt.getString("idtipopedido","vazio");

        if(V==1) {
            if (!t.equals("vazio")) {
                try {
                    movimento.setTipoMv(daoTipoMv.queryForId(Integer.parseInt(t)));
                    tipoMv.setText(movimento.getTipoMv().getNome().toString());
                    V=0;
               } catch (SQLException e) {
                   e.printStackTrace();
                }
            } else {
                Toast.makeText(this, "Tipo de Pedido Informada inválida", Toast.LENGTH_SHORT).show();
            }
        }
    }

    private void buscaCondpagto() {
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = lt.edit();
        String t = lt.getString("idcondpagto","vazio");

        if(V==2) {
            if (!t.equals("vazio")) {
                try {
                    movimento.setCondPagto(daoCondPagto.queryForId(Integer.parseInt(t)));
                    condPagto.setText(movimento.getCondPagto().getNome().toString());
                    V=0;
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else {
                Toast.makeText(this, "Prazo de Pagamento Informado inválido", Toast.LENGTH_SHORT).show();
            }
        }
    }

    private void buscaFormaPag() {
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = lt.edit();
        String t = lt.getString("idformapag","vazio");

        if(V==3) {
            if (!t.equals("vazio")) {
                try {
                    movimento.setFormaPag(daoFormaPag.queryForId(Integer.parseInt(t)));
                    formaPag.setText(movimento.getFormaPag().getNome().toString());
                    V=0;
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else {
                Toast.makeText(this, "Forma de Cobrança Informada inválida", Toast.LENGTH_SHORT).show();
            }
        }
    }

    private void buscaCliente() {
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = lt.edit();
        String t = lt.getString("idcliente","vazio");

        if(V==4) {
            if (!t.equals("vazio")) {
                try {
                    movimento.setCliente(daoPessoa.queryForId(Integer.parseInt(t)));
                    cliente.setText(movimento.getCliente().getNome().toString());
                    V=0;
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            } else {
                Toast.makeText(this, "Cliente Informado inválido", Toast.LENGTH_SHORT).show();
            }
        }
    }
}
