package net.ddns.scvemarchezanmetais.scvemobile.activitys;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dadosws.WsPedidosPOST;
import net.ddns.scvemarchezanmetais.scvemobile.dadosws.WsPessoaPOST;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOMovimento;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOPessoa;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Movimento;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Pessoa;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class Principal extends AppCompatActivity {
    private String idpessoa;

    private DatabaseHelper dh;
    private DAOPessoa daoPessoa;
    private DAOMovimento daoMovimento;
    private Pessoa pessoa = new Pessoa();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_principal);

        Bundle bundle = getIntent().getExtras();
        idpessoa = bundle.getString("idpessoa");
    }

    public void chamaclientes(View view) throws SQLException {
        Intent intent = new Intent(this,Clientes.class);
        startActivity(intent);
    }

    public void pedidos(View view) throws SQLException {
        Intent intent = new Intent(this,Pedidos.class);
        intent.putExtra("idvendedor",idpessoa.toString());
        startActivity(intent);
    }

    public void chamaprodutos(View view) throws SQLException {
        Intent intent = new Intent(this,Produtos.class);
        startActivity(intent);
    }
    //novocliente
    public void novocliente(View view) throws SQLException {
        Intent intent = new Intent(this,Novo_Cliente.class);
        intent.putExtra("idvendedor",idpessoa.toString());
        startActivity(intent);
    }
    //novopedido
    public void novopedido(View view)  {
        Intent intent = new Intent(this,Novo_Pedido.class);
        intent.putExtra("idvendedor",idpessoa.toString());
        startActivity(intent);
    }

    public void enviadados(View view){
        //SharedPreferences lt = getPreferences(Context.MODE_PRIVATE);
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        SharedPreferences.Editor editor = lt.edit();
        String configJ = lt.getString("config","vazio");

        dh = new DatabaseHelper(this);
        try {
            daoPessoa = new DAOPessoa(dh.getConnectionSource());
            daoMovimento = new DAOMovimento(dh.getConnectionSource());
        } catch (SQLException e) {
            e.printStackTrace();
        }

        int total = 0;

        /*chama ws de envio de pessoas com canal igual a EXTERNO*/
        List<Pessoa> pessoas1 = new ArrayList<>();
        try {
            pessoas1.addAll(daoPessoa.queryForEq("canal","EXTERNO"));
            if(pessoas1.size()>0){
                total = pessoas1.size();
                WsPessoaPOST wsPessoaPOST = new WsPessoaPOST(this, pessoas1);
                wsPessoaPOST.execute(configJ+"/SCVE/reset/pessoas/gravar", "", "");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        /*chama ws de envio de pessoas com canal igual a EXTERNO*/
        List<Movimento> movimentos = new ArrayList<>();
        try {
            movimentos.addAll(daoMovimento.queryForEq("canal","EXTERNO"));
            if (movimentos.size() > 0){
                total += movimentos.size();
                WsPedidosPOST wsPedidosPOST = new WsPedidosPOST(this,movimentos);
                wsPedidosPOST.execute(configJ+"/SCVE/reset/pedidos/gravar", "", "");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        if (total == 0){
            Toast.makeText(this, "Não há dados para Enviar", Toast.LENGTH_SHORT).show();
        }

    }
}
