package net.ddns.scvemarchezanmetais.scvemobile.dadosws;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.View;
import android.widget.ProgressBar;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOTipoEndereco;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoEndereco;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.SQLException;
import java.util.List;

public class WsTipoEndereco extends AsyncTask<String,Integer,String> {
    Activity activity;
    ProgressBar progressBar;
    ProgressDialog load;

    private DatabaseHelper dh;
    private DAOTipoEndereco daoTipoEndereco;
    private TipoEndereco tipoEndereco = new TipoEndereco();

    public WsTipoEndereco(Activity activity){
        this.activity = activity;
    }

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        progressBar = (ProgressBar) activity.findViewById(R.id.progressBar);
        progressBar.setVisibility(View.VISIBLE);
       load = ProgressDialog.show(activity, "Por favor Aguarde ...",
                "Baixando Tipo de Endere√ßo ...");
    }

    @Override
    protected void onPostExecute(String s) {
        super.onPostExecute(s);
        Gson gson = new Gson();

        List<TipoEndereco> tipos = gson.fromJson(s, new TypeToken<List<TipoEndereco>>(){}.getType());
        dh = new DatabaseHelper(activity);
        try {
            daoTipoEndereco = new DAOTipoEndereco(dh.getConnectionSource());
        } catch (SQLException e) {
            e.printStackTrace();
        }

        /* excluir estados*/
        try {
            List<TipoEndereco> vlist;
            vlist = daoTipoEndereco.queryForAll();
            if(!vlist.isEmpty()){
                daoTipoEndereco.delete(vlist);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        try {
            for (TipoEndereco cid : tipos) {
                 daoTipoEndereco.create(cid);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        progressBar.setVisibility(View.INVISIBLE);
        load.dismiss();

        //SharedPreferences lt = activity.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(activity.getApplicationContext());
        SharedPreferences.Editor editor = lt.edit();
        String configJ = lt.getString("config","vazio");

        Bundle bundle = activity.getIntent().getExtras();
        String idpessoa = bundle.getString("idpessoa");
        //busca dados dos tipo de enderecos
        WsPessoa wsPessoa = new WsPessoa(activity);
        wsPessoa.execute(configJ+"/scve/reset/pessoas/"+idpessoa,"","");


        dh.close();
    }
    @Override
    protected void onProgressUpdate(Integer... values) {
        super.onProgressUpdate(values);
        progressBar.setProgress(values[0]);
    }

    @Override
    protected String doInBackground(String... strings) {
        String jsonRetorno=null;
        try {
            URL url = new URL(strings[0]);
            InputStream stream = url.openStream();
            BufferedReader bufferedReader =
                    new BufferedReader(new InputStreamReader(stream));
            StringBuilder builder = new StringBuilder();
            onProgressUpdate(10);
            String linha;
            while ((linha = bufferedReader.readLine())!=null){
                builder.append(linha);
            }
            jsonRetorno = builder.toString();
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return jsonRetorno;
    }
}


