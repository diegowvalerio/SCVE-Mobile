package net.ddns.scvemarchezanmetais.scvemobile.activitys;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.ListView;

import net.ddns.scvemarchezanmetais.scvemobile.R;
import net.ddns.scvemarchezanmetais.scvemobile.adapters.ADP_Produtos;
import net.ddns.scvemarchezanmetais.scvemobile.banco.DatabaseHelper;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOProduto;
import net.ddns.scvemarchezanmetais.scvemobile.dao.DAOTipoMvVend;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.ListaPrecoItem;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.Produto;
import net.ddns.scvemarchezanmetais.scvemobile.entidades.TipoMvVend;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class Novo_Pedido_Produto extends AppCompatActivity implements AdapterView.OnItemClickListener{
    private ListView listView;
    private DatabaseHelper dh;
    private DAOProduto daoProduto;
    private Produto produto = new Produto();
    private ADP_Produtos adp_produtos;

    DAOTipoMvVend daoTipoMvVend;
    TipoMvVend tipoMvVend = new TipoMvVend();

    List<Produto> produtos = new ArrayList<>();
    List<Produto> produtosFiltrados = new ArrayList<>();
    EditText filtro ;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_novo_pedido_produto);

        filtro =  findViewById(R.id.filtro_produtos);
        listView = (ListView) findViewById(R.id.listviewProdutos);
        listView.setOnItemClickListener(this);
    }

    @Override
    protected void onStart() {
        super.onStart();
        filtro.setText("");
        preencherLista();
    }

    public void preencherLista() {
        dh = new DatabaseHelper(Novo_Pedido_Produto.this);
        try {
            daoProduto = new DAOProduto(dh.getConnectionSource());
            daoTipoMvVend = new DAOTipoMvVend(dh.getConnectionSource());
        } catch (SQLException e) {
            e.printStackTrace();
        }

        Bundle bundle = getIntent().getExtras();
        if (bundle != null && bundle.containsKey("idtipopedido")) {

        try {
            tipoMvVend = daoTipoMvVend.queryBuilder().where().eq("idmv", bundle.getInt("idtipopedido")).queryForFirst();
            List<ListaPrecoItem> listaPrecoItem = new ArrayList<>();
            listaPrecoItem.addAll(tipoMvVend.getListapreco().getListaprecoitens());
            for (ListaPrecoItem listaPrecoItem1 : listaPrecoItem) {
                produtos.add(listaPrecoItem1.getProduto());
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        adp_produtos = new ADP_Produtos(Novo_Pedido_Produto.this, produtos);
        listView.setAdapter(adp_produtos);

        listView.setTextFilterEnabled(true);
        filtro.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                //quando o texto Ã© alterado chamamos o filtro.
                Pesquisar();
                adp_produtos = new ADP_Produtos(Novo_Pedido_Produto.this, produtosFiltrados);
                listView.setAdapter(adp_produtos);
            }

            @Override
            public void afterTextChanged(Editable s) {

            }
        });
        }
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        produto = (Produto) parent.getItemAtPosition(position);

        SharedPreferences lt = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); //this.getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = lt.edit();
        String t = lt.getString("idproduto","vazio");
        editor.putString("idproduto", produto.getIdproduto().toString());
        editor.commit();

        finish();
    }

    public void Pesquisar() {
        //int textlength = filtro.getText().length();
        produtosFiltrados.clear();

        for (int i = 0; i < produtos.size(); i++) {
            Produto data = produtos.get(i);

            if (!filtro.getText().equals("")) {
                String filtro2 = filtro.getText().toString().toLowerCase();
                String condicao = data.getDescricao().toLowerCase();

                if (condicao.contains(filtro2)) {
                    //se conter adiciona na lista de itens filtrados.
                    produtosFiltrados.add(data);
                }
            }else{
                produtosFiltrados.addAll(produtos);
            }
        }
    }
}
